[project]
name = "music-transformer-playground-background"
description = ""
dynamic = ["version"]
authors = [{ name = "ot07", email = "ot07neoki@gmail.com" }]
license = { text = "MIT" }
requires-python = "==3.7.*"
dependencies = [
  "fastapi>=0.79.0",
  "uvicorn[standard]>=0.18.2",
  "gym==0.17.3",
  "magenta==2.1.3",
  "numpy==1.19.0",
  "tensor2tensor==1.14.1",
  "tensorflow==1.15.2",
  "tensorflow-datasets==3.2.1",
  "tensorflow-probability==0.7.0",
]

[project.optional-dependencies]
server = ["gunicorn>=20.1.0"]

[project.scripts]
app = "app.cli:main"

[build-system]
requires = ["pdm-pep517>=1.0.0"]
build-backend = "pdm.pep517.api"

[tool.pdm]
version = { source = "file", path = "src/app/version.py" }

[tool.pdm.dev-dependencies]
dev = ["mypy>=0.991", "black>=22.12.0", "pytest-cov>=4.0.0", "ruff>=0.0.195"]

[tool.pdm.scripts]
black = "black ."
mypy = "mypy --show-column-numbers ."
ruff_lint = "ruff ."
ruff_fix = "ruff --fix-only ."
test = "pytest tests --cov=app --cov-report=term --cov-report=xml"
format = { composite = ["ruff_fix", "black"] }
lint = { composite = ["ruff_lint", "mypy"] }
check = { composite = ["format", "lint", "test"] }

[tool.pytest.ini_options]
filterwarnings = ["ignore::FutureWarning"]

[tool.black]
target-version = ["py37"]

[tool.ruff]
select = ["E", "F", "W"]
target-version = "py37"

[tool.ruff.per-file-ignores]
"*/__init__.py" = ['F401']

[tool.mypy]
exclude = ["tests", "dist"]
python_version = "3.7"
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
no_implicit_optional = true
show_error_codes = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
  "google.protobuf.*",
  "magenta.*",
  "midi2audio",
  "note_seq",
  "numpy",
  "tensor2tensor.*",
]
ignore_missing_imports = true
